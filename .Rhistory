submit()
spread( test, grade ) %>%
)
submit()
extract_numeric("class5")
submit()
submit()
bye()
swirl()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?rbind_list
rbind_list
rbind_list(passed, failed)
sat
submit()
submit()
submit()
submit()
rm(list=ls())
comm_file <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
comm_file <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
?download.file
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="./ss06hid.csv")
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="./ss06hid.csv", method = "curl")
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="./ss06hid.csv", method = "auto")
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./ss06hid.csv", method = "wget")
comm <- read.csv(file = "./ss06hid.csv", strigsAsFactors = FALSE)
comm <- read.csv(file = "./ss06hid.csv", stringsAsFactors = FALSE)
head(comm)
library(dplyr)
comm <- tbl_df(comm)
comm
filter(comm, val >= 1000000)
filter(comm, VAL >= 1000000)
select(comm, VAL)
filter(comm, VAL == 24)
select(comm, FES)
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "./DATA.gov_NGAP.xlsx", method = "wget")
dateDownloaded <- date()
library(xlsx)
install.packages(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
library(rJava)
install.packages("rJava")
library(rJava)
library("rJava")
library("xlsx", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("xlsxjars", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("xlsxjars", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library(xlsx)
traceback()
debug(library)
library(xlsx)
q
quit
traceback()
quit()
library(xlsx)
gas <- read.xlsx("./DATA.gov_NGAP.xlsx")
gas <- read.xlsx("./DATA.gov_NGAP.xlsx", sheetIndex = 1)
head(gas)
names(gas)
View(gas)
View(gas)
gas <- read.xlsx("./DATA.gov_NGAP.xlsx", sheetIndex = 1, heade = FALSE)
View(gas)
View(gas)
gas <- read.xlsx("./DATA.gov_NGAP.xlsx", sheetIndex = 1, colIndex = 7:15, rowIndex = 18:23)
gas
dat <- gas
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
install.packages("XML")
install.packages("XML")
library(XML)
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile = "./restaurants.xml", method = "wget")
doc <- xmlTreeParse("./restaurants.xml", useInternalNodes = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
rootNode([[1]])
names(rootNode)
class(rootNode)
rootNode[1]
rootNode[[1]]
rest <- rootNode[[1]]
str(rest)
head(rest)
rest[1]
rest[2]
xpathSApply(rest,"//zipcode",xmlValue)
zip_code <- xpathSApply(rest,"//zipcode",xmlValue)
sum(zip_code == "21231")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "./ss06pid.csv", method = "wget")
DT <- read.csv(file"ss06pid.csv", stringsAsFactors = FALSE)
DT <- read.csv(file="./ss06pid.csv", stringsAsFactors = FALSE)
str(DT)
DT$pwgtp5
DT$SEX
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
Sys.time()
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time()
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
DT[,mean(pwgtp15),by=SEX]
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode
htmlCode[1]
htmlCode[170]
length(htmlCode[170])
nchar(htmlCode[170])
?nchar
nchar(htmlCode[180])
nchar(htmlCode[c(10,20,30,100)])
for <- read.fortran(file = "./getdata_wksst8110.for", format = "rF9.1" )
for <- read.fortran(file = "./getdata_wksst8110.for")
read.fortran(file = "./getdata_wksst8110.for")
read.fortran(file = "./getdata_wksst8110.for", format = "2F.1")
read.fortran(file = "./getdata_wksst8110.for", format = c("1A15","9F2.1"))
read.fwf(file = "./getdata_wksst8110.for")
read.fwf(file = "./getdata_wksst8110.for", widths = c(10,5,4,4,5,4,4,5,4,4))
dat <- read.fwf(file = "./getdata_wksst8110.for", widths = c(10,5,4,4,5,4,4,5,4,4))
str(dat)
names(dat)
dat$V1
dat$V2
library(dplyr)
dat <- tbl_df(dat)
dat
dat1 <- select(dat, -V2, -V5, -V8)
dat1
sum(select(dat1,V4))
summarize(dat, V4, sum)
?sum
dat1$V4
sum(dat1$V4)
dat2 <- filter(dat1, !is.na(V4), !is.na(V9))
dat2
nchar(htmlCode[c(10,20,30,100)])
names(dat2)
dat3 <- select(dat2, -1:-3)
dat3
dat3 <- filter(dat2, -(1:3))
dat2
filter(dat2, 1:3)
slice(dat2, -(1:3))
dat3 <- slice(dat2, -(1:3))
select(dat3, 4)
slice(dat3, 4)
slice(dat3,4) %>% select(-V1)
slice(dat3,4) %>% select(-V1)[,1]
slice(dat3,4) %>% select(-V1) %>% [,1]
dat4 <- slice(dat3,4) %>% select(-V1)
dat4
dat4[,1]
dat4[1,]
sum(c(24.4, -0.5, 25.5, -0.4, 26.5, -0.1))
dat
dat <- read.fwf(file = "./getdata_wksst8110.for", widths = c(10,5,4,4,5,4,4,5,4,4,5,4,4))
dat
dat <- tbl_df(dat)
dat
dat2 <- slice(dat, -(1:4))
dat2
dat3<-
;
dat2 <- select(dat2, -V2,-V5,-V8,-V11)
dat2
sumarize(dat2,V3:V13,sum)
summarize(dat2,V3:V13,sum)
summarize(dat2,V3,sum)
length(dat2$V3)
length(dat2$V4)
length(dat2$V5)
length(dat2$V6)
sum(dat2$V3)
mutate(V1 = as.numeric(V1))
mutate(dat2, V1 = as.numeric(V1))
mutate(dat2, V3 = as.numeric(V3))
mutate(dat2, V4 = as.numeric(V4))
dat <- read.fwf(file = "./getdata_wksst8110.for", widths = c(10,5,4,4,5,4,4,5,4,4,5,4,4), skip = 4)
dat
head(dat)
dat$V3
class(dat$V3)
sum(dat$V3)
dat[4,]
sum(c(24.4, -0.5, 25.5, -0.4, 26.5, -0.1, 28.4, 0.2))
head(dat)
head(dat,4)
dat4 <- head(dat, 4)
dat4
sum(dat4$V3, dat$V4)
sum(dat4$V3)
sum(dat4$V4)
sum(dat4$V6)
sum(dat4$V7)
sum(dat4$V9)
sum(dat4$V10)
sum(dat4$V12)
sum(dat4$V13)
sum(c(295.4, -2, 101.1, -1.3, 106.2, -0.1, 114.2, 1.1))
dat
sum(dat$V7)
sum(dat$V6)
sum(dat$V3)
sum(dat$V4)
head(dat)
library(httr)
my_app = outh_app("GitHub", key = "ab5a73b26cc4684887ac", secret = "3d4946969e8ff250266f32ecb519816ad0a4bdc6")
my_app = oauth_app("GitHub", key = "ab5a73b26cc4684887ac", secret = "3d4946969e8ff250266f32ecb519816ad0a4bdc6")
sig = sign_oauth1.0(myapp, token = "90a06acad716cc19f86ead9b37a01308e890ec28")
sig = sign_oauth1.0(my_app, token = "90a06acad716cc19f86ead9b37a01308e890ec28")
homeGH = GET("https://api.github.com/users/jtleek/repos", sig)
homeGH
rm(list=ls())
oauth_endpoints("github")
myapp <- oauth_app("github", "ab5a73b26cc4684887ac", "3d4946969e8ff250266f32ecb519816ad0a4bdc6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
install.packages("httpuv")
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
str(gtoken)
req <- GET("https://api.github.com/rate_limit", gtoken)
req
?stop_for_status
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
content(req)
str(req)
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
install.packages("RJSONIO")
json2 = jsonlite::fromJSON(toJSON(json1))
library(RJSONIO)
json2 = jsonlite::fromJSON(toJSON(json1))
str(json2)
json2$description
View(json2)
json2$name=="datasharing"
reg <- json2[json2$name=="datasharing"]
reg
reg <- json2[json2$name=="datasharing", ]
reg
str(reg)
reg$created_at
set.seed(13435)
X <- data.frame("var1"=sample(1:5), "var2"=sample(6:10), "var3"=sample(11:15))
X
X <- X[sample(1:5), ]
X
X$var2[c(1:3)] = NA
X
set.seed(13435)
X <- data.frame("var1"=sample(1:5), "var2"=sample(6:10), "var3"=sample(11:15))
X <- X[sample(1:5), ]
X$var2[c(1,3)] = NA
X
library(swirk)
library(swirl)
swir()
swirl()
mydf <- read.csv(path2csv, strinsAsFactors = FALSE)
mydf <- read.csv(file = path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran -(X:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country=="US")
?Comparaison
?Comparison
filter(cran, r_version == "3.0.2", country=="IN")
filter(cran, r_version <= "3.0.2", country=="IN")
filter(cran, country == "US" | country=="IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran, country, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes=(size))
summarize(cran, avg_bytes=mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, avg_size = mean(size))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, count)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, value, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
students2
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
reset()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?rbind_list
rbind_list(passed, failed)
sat
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("Marzo 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 22, minutes = 39)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nys
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
last_time <- mdy("Junio 17, 2008", tz="Singapore")
last_time
last_time <- mdy("Junio 17 2008", tz="Singapore")
last_time
last_time <- ymd("2008 Junio 17", tz="Singapore")
last_time
last_time <- ymd("2008/06/17", tz="Singapore")
last_time
last_time <- ymd("2008/06/17", tz = "Singapore")
las_time
last_time
last_time <- dmy("17/06/2008")
last_time
last_time <- dmy("17062008")
last_time
last_time <- ymd("20080617")
last_time
?new_interval
arrive
dmy("17062008")
last_time <- dmy("17062008")
last_time
last_time <- with_tz(last_time, tzone = "Singapore")
last_time
new_interval(last_time, arrive)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
quit
exit
quit
quit
exit
quit*()
ls*()
ls()
rm(list=ls())
quit()
setwd("datascience//Reproducible Research//RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
activity$time <- gsub("\\.", ":", formatC(activity$interval/100, 2, format = "f"))
activity$time
head(activity)+tail(activity)
rbind(head(activity), tail(activity))
activity <- read.csv("activity.csv")
activity$interval <- gsub("\\.", ":", formatC(activity$interval/100, 2, format = "f"))
head(activity)
activity <- read.csv("activity.csv")
sprintf("%04d", active$interval), "%H%M")
sprintf("%04d", active$interval)
sprintf("%04d", activity$interval)
sprintf("%04d", activity$interval/100)
gsub("\\.", ":", formatC(activity$interval/100, 2, format = "%04d"))
